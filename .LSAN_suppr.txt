# Suppression of memory leaks
# https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer#suppressions

# These are known leaks that await fixing

# on Apple arm64: suppress system libraries
#   * https://github.com/google/sanitizers/issues/1501
#   * https://github.com/llvm/llvm-project/issues/59758
#   * https://discourse.llvm.org/t/does-leaksanitizer-not-work-on-macos-13-apple-silicon
leak:realizeClassWithoutSwift
leak:_fetchInitializingClassList
leak:libobjc.A.dylib
leak:libsystem_c.dylib
leak:libsystem_info.dylib

# known issue with libcurl and SystemConfiguration on macOS
# https://developer.apple.com/forums/thread/745636
leak:__SCGetThreadSpecificData

# known leak in some OpenSSL versions, where memory allocated during
# OPENSSL_init_ssl is never explicitly freed â€”
# sometimes by design (e.g., reused for the entire process lifetime).
# https://mta.openssl.org/pipermail/openssl-users/2022-June/015263.html
leak:OPENSSL_init_ssl
